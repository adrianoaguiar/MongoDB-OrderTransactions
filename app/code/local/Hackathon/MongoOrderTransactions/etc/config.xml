<?xml version="1.0" encoding="UTF-8"?>
<config>
    <modules>
        <Hackathon_MongoOrderTransactions>
            <version>0.0.1</version>
        </Hackathon_MongoOrderTransactions>
    </modules>
    <global>
        <models>
            <hackathon_ordertransaction>
                <class>Hackathon_MongoOrderTransactions_Model</class>
                <resourceModel>hackathon_ordertransaction_resource</resourceModel>
            </hackathon_ordertransaction>
            <hackathon_ordertransaction_resource>
                <class>Hackathon_MongoOrderTransactions_Model_Resource</class>
                <entities>
                    <order_seq><table>hackathon_ordertransaction_seq</table></order_seq>
                </entities>
            </hackathon_ordertransaction_resource>
            <sales>
                <rewrite>
                    <order>Hackathon_MongoOrderTransactions_Model_Sales_Order</order>
                </rewrite>
            </sales>
        </models>
        <helpers>
            <hackathon_ordertransaction>
                <class>Hackathon_MongoOrderTransactions_Helper</class>
            </hackathon_ordertransaction>
        </helpers>
        <resources>
            <hackathon_ordertransaction_setup>
                <setup>
                    <module>Hackathon_MongoOrderTransactions</module>
                </setup>
            </hackathon_ordertransaction_setup>
        </resources>
        <events>
            <checkout_cart_save_after>
                <observers>
                    <updateStockInMongoEvent3>
                        <class>hackathon_ordertransaction/observer</class>
                        <method>checkoutCartSaveAfter</method>
                        <type>singleton</type>
                    </updateStockInMongoEvent3>
                </observers>
            </checkout_cart_save_after>
            <sales_quote_item_qty_set_after>
                <observers>
                    <inventory>
                        <class>hackathon_ordertransaction/observer</class>
                        <method>checkQuoteItemQty</method>
                        <type>singleton</type>
                    </inventory>
                </observers>
            </sales_quote_item_qty_set_after>
            <sales_quote_remove_item>
                <observers>
                    <updateStockInMongoEvent2>
                        <class>hackathon_ordertransaction/observer</class>
                        <method>checkQuoteItemQty</method>
                        <type>singleton</type>
                    </updateStockInMongoEvent2>
                </observers>
            </sales_quote_remove_item>

            <sales_model_service_quote_submit_success>
                <observers>
                    <updateStockInMongoEvent1>
                        <class>hackathon_ordertransaction/observer</class>
                        <method>reindexQuoteInventory</method>
                        <type>singleton</type>
                    </updateStockInMongoEvent1>
                </observers>
            </sales_model_service_quote_submit_success>
        </events>
    </global>
    <crontab>
        <jobs>
            <processor_merge>
                <schedule><cron_expr>*/5 * * * *</cron_expr></schedule>
                <run>
                    <model>hackathon_ordertransaction/queue_processor::merge</model>
                </run>
            </processor_merge>
            <processor_clean>
                <schedule><cron_expr>*/20 * * * *</cron_expr></schedule>
                <run>
                    <model>hackathon_ordertransaction/queue_processor::clean</model>
                </run>
            </processor_clean>
        </jobs>
    </crontab>
    <default>
        <mongotransaction>
            <db>ordertransactions</db>
        </mongotransaction>
    </default>
</config>